{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","navigator","clipboard","writeText","nextText","split","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.05000522.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  return (\n    <div>\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\n            </li>\n          </ul>\n          <form className=\"d-flex\" role=\"search\">\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\n          </form>\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n          </div>\n        </div>\n      </div>\n    </nav>\n    </div>\n  )\n}\n\nNavbar.propTypes = {title: PropTypes.string.isRequired,\n                    about: PropTypes.string}\n\nNavbar.defaultProps = {\n    title: 'Set Title',\n    about: 'About'\n};","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n    const handleUpClick =()=>{\n        let newText = text.toUpperCase();\n        setText(newText)\n        props.showAlert(\"Converted to uppercase!\", \"success\")\n    }\n    const handleClick =()=>{\n        let newText = text.toLowerCase();\n        setText(newText)\n        props.showAlert(\"Converted to lowercase!\", \"success\")\n    }\n    const handleClearClick =()=>{\n        let newText = '';\n        setText(newText)\n        props.showAlert(\"Text Cleared!\", \"success\")\n        \n    }\n    const handldeOnChange =(event)=>{\n        setText(event.target.value)\n    }\n    const handleCopyClick =()=>{\n        let text = document.getElementById('myBox');\n        //text.select()\n        navigator.clipboard.writeText(text.value)\n        //document.getSelection().removeAllRanges()\n        props.showAlert(\"Copy to Clipboard!\", \"success\")\n    }\n    const handleExtraSpaces =()=>{\n        let nextText = text.split(/[ ]+/)\n        setText(nextText.join(\" \"))\n        props.showAlert(\"Extra spaces removed!\", \"success\")\n    }\n\n  const [text, setText] = useState('');\n  return (\n    <>  \n    <div className='container' style={{color:props.mode==='dark'?'white':'#042743'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handldeOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n        </div>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClick}>Convert to Lowercase</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n    </div>\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#042743'}}>\n        <h2>Your Text Summary</h2>\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:'Nothing to preview'}</p>\n    </div>\n    </>\n  )\n}","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word)=> {\n        const lower = word.toLowerCase()\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\n    }\n    return (\n        <div style={{height: '50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n        </div>}\n        </div>\n  )\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router,Route,Routes } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState()\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500);\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - DarkMode'\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - LightMode'\n    }\n  }\n  return (\n    <>\n  {/* <Router> */}\n    <Navbar title='TextUtils' mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Navbar title='TextUtils' about='About TextUtils'/> */}\n          {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading='Enter the text to analyze below' mode={mode}/>}/> */}\n          <TextForm showAlert={showAlert} heading='Enter the text to analyze below' mode={mode}/>\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n        {/* </Routes> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}